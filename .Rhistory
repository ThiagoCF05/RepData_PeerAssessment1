r <- getOption("repos")
r["CRAN"] <-"http://cran.us.r-project.org"
options(repos = r)
install.packages("FSelector")
package("FSelector")
packages("FSelector")
library("FSelector")
quit()
View(dataset)
clear
clear()
a <- 3
```
install.packages("rmarkdown")
summary(cars)
summary(cars)
read.csv('activity.csv')
read.csv('activity.csv')
## What is mean total number of steps taken per day?
read.csv(file= 'activity.csv')
read.csv(file= '/activity.csv')
setwd("Documents/Coursera/Reproducle\ Research/RepData_PeerAssessment1/")
setwd("~/Documents/Coursera/Reproducible Research/RepData_PeerAssessment1")
data <- read.csv(file= '/activity.csv')
setwd("~/Documents/Coursera/Reproducible Research/RepData_PeerAssessment1")
data <- read.csv(file= 'activity.csv')
data
summary(data)
print(data$steps)
print(data$steps[:10])
print(data$steps[10])
print(data$steps[10, ])
dim(data)
dim(data$steps)
View(data)
data$steps
data$steps
dim(data$steps)
data$steps[0]
data$steps[123]
data$steps[1234]
data$steps[1234]
data$steps[122222234]
data$steps[122222234]
data$steps[12]
data$steps[13]
subset(data, steps != NA)
filtered <- subset(data, steps != NA)
filtered <- subset(data, steps > 0)
filtered
data
data$steps
filtered <- subset(data, is.na(steps) != 0)
filtered
filtered <- subset(data, is.na(steps) == 0)
filtered
View(filtered)
aggregate(filtered$steps, by=list(filtered$date), FUN=sum)
filtered <- aggregate(filtered$steps, by=list(filtered$date), FUN=sum)
filtered[1:]
filtered[1]
filtered[2]
filtered[:1]
xt <- xtable(summary(filtered))
install.packages(xtable)
install.packages('xtable')
print(xt, type="html")
print(xt, type="html")
```{r show_preprocessed}
```{r show_preprocessed, results="asis"}
print(xt, type="html")
```
```
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
## Loading and preprocessing the data
filtered <- aggregate(filtered$steps, by=list(filtered$date), FUN=sum)
data <- read.csv(file= 'activity.csv')
filtered <- subset(data, is.na(steps) == 0)
filtered <- aggregate(filtered$steps, by=list(filtered$date), FUN=sum)
colnames(filtered)[0] <- "date"
```{r show_preprocessed, results="asis"}
library(xtable)
xt <- xtable(summary(filtered))
print(xt, type="html")
print("Teste", type="html")
preprocessed <- subset(data, is.na(steps) == 0)
preprocessed <- aggregate(preprocessed$steps, by=list(preprocessed$date), FUN=sum)
View(preprocessed)
View(filtered)
colnames(preprocessed)[0] <- "date"
View(preprocessed)
colnames(preprocessed)[2] <- "steps"
preprocessed.mean()
mean(preprocessed)
mean(preprocessed$steps)
data <- read.csv(file= 'activity.csv')
cleaned <- subset(data, is.na(steps) == 0)
preprocessed <- aggregate(cleaned$steps, by=list(cleaned$date), FUN=sum)
colnames(preprocessed)[1] <- "date"
colnames(preprocessed)[2] <- "steps"
View(preprocessed)
summarize(preprocessed)
preprocessed
View(data)
View(cleaned)
daily <- aggregate(cleaned$steps, by=list(cleaned$interval), FUN=mean)
argmax(daily$x)
colnames(daily)[1] <- "interval"
colnames(daily)[2] <- "steps"
daily$interval
daily$steps
which(daily$steps==max(daily$steps))
View(cleaned)
View(data)
size(data)
len(data)
length(data)
dim(data)
dim(data)[1]
data$steps
data[0]$steps
data$steps[1]
data$steps[10]
data$steps[234]
data$steps[233]
data$steps
data$steps[2330]
data$steps[2330]
data$steps[2320]
data$steps[3320]
data$steps[6320]
View(data)
which(preprocessed$date == data$date[2333])$steps
which(preprocessed$date == data$date[2333])
preprocessed[which(preprocessed$date == data$date[i])$steps]
preprocessed[which(preprocessed$date == data$date[i])]
which(preprocessed$date == data$date[i])$steps
preprocessed[which(preprocessed$date == data$date[4])$steps]
preprocessed[which(preprocessed$date == data$date[10])]
which(preprocessed$date == data$date[4])
which(preprocessed$date == data$date[23330])
data$date[4]
data[4]
data[4,]
data[4,]$date
preprocessed
preprocessed[which(preprocessed$date == data$date[4])]
a = preprocessed[which(preprocessed$date == data$date[i])]
a <- preprocessed[which(preprocessed$date == data$date[4])]
View(a)
data$date[4]
data$date[4] == data$date[4]
which(preprocessed$date == data$date[4])
which(preprocessed$date == data$date[0])
which(preprocessed$date == data$date[2333])
which(preprocessed$date == cleaned$date[2333])
which(preprocessed$date == cleaned$date[2333])
which(preprocessed$date == cleaned$date[5333])
which(preprocessed$date == cleaned$date[0])
which(preprocessed$date == cleaned$date[1])
which(preprocessed$date == cleaned$date[2])
which(preprocessed$date == cleaned$date[3])
which(preprocessed$date == cleaned$date[30])
preprocessed[which(preprocessed$date == data$date[5])]
preprocessed[which(preprocessed$date == data$date[5]), ]
which(preprocessed$date == data$date[5])
which(preprocessed$date == data$date[6])
which(preprocessed$date == data$date[26])
which(preprocessed$date == data$date[256])
which(preprocessed$date == data$date[2333])
preprocessed$steps[which(preprocessed$date == data$date[2333])]
preprocessed$steps[which(preprocessed$date == data$date[0])]
preprocessed$steps[which(preprocessed$date == data$date[1])]
preprocessed$steps[which(preprocessed$date == data$date[3])]
preprocessed$steps[which(preprocessed$date == data$date[5])]
preprocessed$steps[which(preprocessed$date == data$date[100])]
preprocessed$steps[which(preprocessed$date == data$date[500])]
preprocessed$steps[which(preprocessed$date == data$date[600])]
preprocessed$steps[which(preprocessed$date == data$date[800])]
preprocessed$steps[which(preprocessed$date == data$date[1800])]
preprocessed$steps[which(preprocessed$date == data$date[2800])]
preprocessed$steps[which(preprocessed$date == data$date[3800])]
preprocessed$steps[which(preprocessed$date == data$date[100800])]
preprocessed$steps[which(preprocessed$date == data$date[10800])]
data$date[10800]
preprocessed$steps[which(preprocessed$date == data$date[10800])]
preprocessed$steps[which(preprocessed$date == data$date[5])]
preprocessed$steps[which(preprocessed$date == data$date[50])]
preprocessed$steps[which(preprocessed$date == data$date[500])]
preprocessed$steps[which(preprocessed$date == data$date[5000])]
preprocessed$steps[which(preprocessed$date == data$date[6000])]
data$steps[i]
data$steps[60]
updated <- data
View(updated)
View(updated)
for(i in 1:dim(data)[1]){
if (is.na(data$steps[i]) != 0){
value <- preprocessed$steps[which(preprocessed$date == data$date[i])]
updated$steps[i] <- 4
}
}
View(updated)
for(i in 1:dim(data)[1]){
if (is.na(data$steps[i]) != 0){
value <- preprocessed$steps[which(preprocessed$date == data$date[i])]
updated$steps[i] <- value
}
}
which(preprocessed$date == data$date[i])
which(preprocessed$date == data$date[4])
which(preprocessed$date == data$date[400])
subset(preprocessed, date == data$date[0])
subset(preprocessed, date == data$date[1])
data$date[2]
data$date[2][0]
data$date[2]
data$date[2000]
data$steps[1]
data$steps[60]
data$date[60]
data$date[60] == 2012-10-01
data$date[60] == "2012-10-01"
preprocessed
subset(preprocessed, date == data$date[60])
subset(preprocessed, date == data$date[600])
subset(preprocessed, date == data$date[1])
subset(preprocessed, date == data$date[1])$steps
dim(subset(preprocessed, date == data$date[1]))
subset(preprocessed, date == data$date[101])$steps
subset(preprocessed, date == data$date[289])$steps
weekdays(updated$date[1])
weekdays(updated$date)
weekdays(as.Date(updated$date[1]))
weekdays(as.Date(updated$date[3]))
weekdays(as.Date(updated$date[300]))
weekdays(as.Date(updated$date[301]))
weekdays(as.Date(updated$date[401]))
weekdays(as.Date(updated$date[501]))
weekdays(as.Date(updated$date[601]))
updated["week"] <- NA
View(updated)
